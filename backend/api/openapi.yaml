openapi: 3.0.3
info:
  title: Chat API
  version: 1.0.0

paths:
  /signup:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
                
        '400':
          description: Username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'    

  /messages:
    post:
      summary: Send a message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageInput'
      responses:
        '201':
          description: Sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

    get:
      summary: Get messages with a user
      parameters:
        - name: room_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

  /chat-rooms:
    post:
      summary: Create or fetch a 1:1 chat room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoomInput'
      responses:
        '201':
          description: Room created or reused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'


components:
  schemas:
    UserInput:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          
    SignupResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - id
        - name
        - email

    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    LoginResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Human-readable error message

    MessageInput:
      type: object
      required:
        - room_id
        - text
      properties:
        room_id:
          type: integer
        text:
          type: string


    Message:
      type: object
      required:
        - id
        - sender_id
        - room_id
        - text
        - timestamp
      properties:
        id:
          type: integer
        sender_id:
          type: integer
        room_id:
          type: integer
        text:
          type: string
        timestamp:
          type: string
          format: date-time

    ChatRoomInput:
      type: object
      required:
        - target_user_id
      properties:
        target_user_id:
          type: integer

    ChatRoom:
      type: object
      required:
        - id
        - is_group
        - created_at
      properties:
        id:
          type: integer
        is_group:
          type: boolean
        created_at:
          type: string
          format: date-time


